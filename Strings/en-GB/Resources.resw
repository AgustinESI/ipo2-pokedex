<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnDesarrolladores.Content" xml:space="preserve">
    <value>Developers</value>
  </data>
  <data name="btnFAQ.Content" xml:space="preserve">
    <value>FAQ</value>
  </data>
  <data name="cuartoCuerpo.Text" xml:space="preserve">
    <value>To increase the accessibility of our program, it has a built-in automatic reader that will read all the sites the user can access.</value>
  </data>
  <data name="cuartoTitulo.Text" xml:space="preserve">
    <value>Information about accessibility</value>
  </data>
  <data name="desarrolladores2.Content" xml:space="preserve">
    <value>Developers</value>
  </data>
  <data name="DesaText.Text" xml:space="preserve">
    <value>Project developers</value>
  </data>
  <data name="faq2.Content" xml:space="preserve">
    <value>FAQ</value>
  </data>
  <data name="faqTitulo2.Text" xml:space="preserve">
    <value>FAQ</value>
  </data>
  <data name="GitAgustin.Content" xml:space="preserve">
    <value>View GitHub profile</value>
  </data>
  <data name="GitMiriam.Content" xml:space="preserve">
    <value>View GitHub profile</value>
  </data>
  <data name="GitRoberto.Content" xml:space="preserve">
    <value>View GitHub profile</value>
  </data>
  <data name="p1flee.Content" xml:space="preserve">
    <value>Flee</value>
  </data>
  <data name="p1strong.Content" xml:space="preserve">
    <value>Strong Attack</value>
  </data>
  <data name="p1ultrabeast.Content" xml:space="preserve">
    <value>Mega-Evolution</value>
  </data>
  <data name="p1weak.Content" xml:space="preserve">
    <value>Weak attack</value>
  </data>
  <data name="p2flee.Content" xml:space="preserve">
    <value>Flee</value>
  </data>
  <data name="p2strong.Content" xml:space="preserve">
    <value>Strong Attack</value>
  </data>
  <data name="p2ultrabeast.Content" xml:space="preserve">
    <value>Mega-Evolution</value>
  </data>
  <data name="p2weak.Content" xml:space="preserve">
    <value>Weak attack</value>
  </data>
  <data name="player1.Text" xml:space="preserve">
    <value>PLAYER 1</value>
  </data>
  <data name="player2.Text" xml:space="preserve">
    <value>PLAYER 2</value>
  </data>
  <data name="primerCuerpo.Text" xml:space="preserve">
    <value>In the pokedex section there is a complete list of pokemons from the first to 7th edition, at the top you can filter by the captured pokemons (developed by your companions), there is a search engine to filter by the name of the pokemon. Those captured pokemon appear with a pokeball</value>
  </data>
  <data name="primerTitulo.Text" xml:space="preserve">
    <value>Information about the pokedex</value>
  </data>
  <data name="quintoCuerpo.Text" xml:space="preserve">
    <value>So that our program has internationalization, we have given the possibility of translating it into two languages: English and Spanish. This will be achieved by clicking on the corresponding button</value>
  </data>
  <data name="quintoTitulo.Text" xml:space="preserve">
    <value>Information about the internationalization</value>
  </data>
  <data name="segundoCupero.Text" xml:space="preserve">
    <value>You can select two game modes, 1 vs 1 and 1 vs Artificial Intelligence. The Pokémon are only selectable those captured (developed by the students). There are 2 types of attacks (Strong Attack, Weak Attack), there is the possibility of fleeing from combat and depending on the pokemon it can evolve</value>
  </data>
  <data name="segundoTitulo.Text" xml:space="preserve">
    <value>Information about the combat</value>
  </data>
  <data name="tblifes.Text" xml:space="preserve">
    <value>Lifes</value>
  </data>
  <data name="tbSearch.PlaceholderText" xml:space="preserve">
    <value>Search pokemon</value>
  </data>
  <data name="tbstars.Text" xml:space="preserve">
    <value>Successes</value>
  </data>
  <data name="tercerCuerpo.Text" xml:space="preserve">
    <value>By selecting one of the pokemon from the list at the bottom right, we can increase the pokemon's experience and thus be able to improve the pokemon so that they perform better in combat. The game consists of guessing the pokemon among the options presented, you must guess a minimum of 6 pokemon and it only has 3 lives available.</value>
  </data>
  <data name="tercerTitulo.Text" xml:space="preserve">
    <value>Information about MiniGame</value>
  </data>
  <data name="textCap.Text" xml:space="preserve">
    <value>Captured</value>
  </data>
</root>